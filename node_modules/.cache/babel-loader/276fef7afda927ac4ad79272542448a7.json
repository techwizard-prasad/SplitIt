{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\Desktop\\\\PrasadData\\\\React\\\\splitit\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\PrasadData\\\\React\\\\splitit\\\\src\\\\Splitter.js\";\nimport React from \"react\";\nimport AddUser from \"./AddUser.js\";\nimport UserTable from \"./UserTable.js\";\n\nclass Splitter extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      numberOfUsers: 0,\n      participants: [{\n        id: 0,\n        name: \"\",\n        contribution: 0,\n        amountPayable: 0\n      }],\n      products: [],\n      user: {},\n      product: {\n        name: \"\",\n        price: 0,\n        user: 0,\n        participants: []\n      }\n    };\n    this.saveUser = this.saveUser.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.AddExpense = this.AddExpense.bind(this);\n    this.resetProduct = this.resetProduct.bind(this);\n  }\n\n  saveUser(user) {\n    let tempUser = {\n      id: user.id,\n      name: user.name,\n      contribution: 0,\n      amountPayable: 0\n    };\n    let newParticipans = user.id > 1 ? this.state.participants : [];\n    newParticipans.push(tempUser);\n    let productUsers = this.state.product.participants;\n    productUsers.push({\n      id: user.id,\n      name: user.name,\n      selected: false\n    });\n    this.setState(prevState => {\n      return {\n        participants: newParticipans,\n        numberOfUsers: user.id,\n        product: _objectSpread({}, prevState.product, {\n          participants: productUsers\n        })\n      };\n    });\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value,\n          type = _event$target.type,\n          checked = _event$target.checked;\n\n    if (type === \"checkbox\") {\n      const users = this.state.product.participants && this.state.product.participants.length > 0 ? this.state.product.participants : [];\n      const userIndex = users.findIndex(user => user.id === Number(value));\n      users[userIndex].selected = checked;\n      this.setState(prevState => {\n        return {\n          product: _objectSpread({}, prevState.product, {\n            participants: users\n          })\n        };\n      });\n    } else {\n      this.setState(prevState => {\n        return {\n          product: _objectSpread({}, prevState.product, {\n            [name]: value\n          })\n        };\n      });\n    }\n  }\n\n  AddExpense() {\n    this.setState(prevState => {\n      let newProducts = prevState.products;\n      newProducts.push(prevState.product);\n      return {\n        products: newProducts\n      };\n    });\n  }\n\n  resetProduct() {\n    this.setState(prevState => {\n      const oldParticipants = prevState.product.participants;\n      oldParticipants.forEach(element => {\n        element.selected = false;\n      });\n      return {\n        product: {\n          name: \"\",\n          price: 0,\n          user: 0,\n          participants: oldParticipants\n        }\n      };\n    });\n  }\n\n  render() {\n    let userListForDropdown = this.state.numberOfUsers > 0 && this.state.participants.map((user, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, user.name);\n    });\n    let userListForCheckBox = this.state.numberOfUsers > 0 && this.state.product.participants.map((user, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: user.id,\n        onChange: this.handleChange,\n        checked: user.selected,\n        name: user.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), user.name);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(AddUser, {\n      saveUser: this.saveUser,\n      currentId: this.state.numberOfUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(UserTable, {\n      participants: this.state.participants,\n      numberOfUsers: this.state.numberOfUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Splitter;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\PrasadData\\React\\splitit\\src\\Splitter.js"],"names":["React","AddUser","UserTable","Splitter","Component","constructor","state","numberOfUsers","participants","id","name","contribution","amountPayable","products","user","product","price","saveUser","bind","handleChange","AddExpense","resetProduct","tempUser","newParticipans","push","productUsers","selected","setState","prevState","event","target","value","type","checked","users","length","userIndex","findIndex","Number","newProducts","oldParticipants","forEach","element","render","userListForDropdown","map","i","userListForCheckBox"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport AddUser from \"./AddUser.js\";\r\nimport UserTable from \"./UserTable.js\";\r\n\r\nclass Splitter extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      numberOfUsers: 0,\r\n      participants: [\r\n        {\r\n          id: 0,\r\n          name: \"\",\r\n          contribution: 0,\r\n          amountPayable: 0\r\n        }\r\n      ],\r\n\r\n      products: [],\r\n\r\n      user: {},\r\n\r\n      product: {\r\n        name: \"\",\r\n        price: 0,\r\n        user: 0,\r\n        participants: []\r\n      }\r\n    };\r\n\r\n    this.saveUser = this.saveUser.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.AddExpense = this.AddExpense.bind(this);\r\n    this.resetProduct = this.resetProduct.bind(this);\r\n  }\r\n\r\n  saveUser(user) {\r\n    let tempUser = {\r\n      id: user.id,\r\n      name: user.name,\r\n      contribution: 0,\r\n      amountPayable: 0\r\n    };\r\n\r\n    let newParticipans = user.id > 1 ? this.state.participants : [];\r\n    newParticipans.push(tempUser);\r\n\r\n    let productUsers = this.state.product.participants;\r\n    productUsers.push({\r\n      id: user.id,\r\n      name: user.name,\r\n      selected: false\r\n    });\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        participants: newParticipans,\r\n        numberOfUsers: user.id,\r\n        product: { ...prevState.product, participants: productUsers }\r\n      };\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value, type, checked } = event.target;\r\n    if (type === \"checkbox\") {\r\n      const users =\r\n        this.state.product.participants &&\r\n        this.state.product.participants.length > 0\r\n          ? this.state.product.participants\r\n          : [];\r\n      const userIndex = users.findIndex(user => user.id === Number(value));\r\n\r\n      users[userIndex].selected = checked;\r\n\r\n      this.setState(prevState => {\r\n        return {\r\n          product: { ...prevState.product, participants: users }\r\n        };\r\n      });\r\n    } else {\r\n      this.setState(prevState => {\r\n        return {\r\n          product: { ...prevState.product, [name]: value }\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  AddExpense() {\r\n    this.setState(prevState => {\r\n      let newProducts = prevState.products;\r\n      newProducts.push(prevState.product);\r\n      return {\r\n        products: newProducts\r\n      };\r\n    });\r\n  }\r\n\r\n  resetProduct() {\r\n    this.setState(prevState => {\r\n      const oldParticipants = prevState.product.participants;\r\n      oldParticipants.forEach(element => {\r\n        element.selected = false;\r\n      });\r\n      return {\r\n        product: { name: \"\", price: 0, user: 0, participants: oldParticipants }\r\n      };\r\n    });\r\n  }\r\n  render() {\r\n    let userListForDropdown =\r\n      this.state.numberOfUsers > 0 &&\r\n      this.state.participants.map((user, i) => {\r\n        return (\r\n          <option key={i} value={user.id}>\r\n            {user.name}\r\n          </option>\r\n        );\r\n      });\r\n\r\n    let userListForCheckBox =\r\n      this.state.numberOfUsers > 0 &&\r\n      this.state.product.participants.map((user, i) => {\r\n        return (\r\n          <label key={i}>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={user.id}\r\n              onChange={this.handleChange}\r\n              checked={user.selected}\r\n              name={user.name}\r\n            />\r\n            {user.name}\r\n          </label>\r\n        );\r\n      });\r\n\r\n    return (\r\n      <div>\r\n        <AddUser\r\n          saveUser={this.saveUser}\r\n          currentId={this.state.numberOfUsers}\r\n        />\r\n        <br />\r\n\r\n        <UserTable\r\n          participants={this.state.participants}\r\n          numberOfUsers={this.state.numberOfUsers}\r\n        />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Splitter;\r\n"]},"metadata":{},"sourceType":"module"}