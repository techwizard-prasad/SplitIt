{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\PrasadData\\\\React\\\\splitit\\\\src\\\\AddExpense.js\";\nimport React from \"react\";\n\nclass AddExpense extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.resetProduct = () => {\n      let resetParticipants = this.state.participants;\n      let temp = resetParticipants.map(participant => {\n        return {\n          id: participant.uid,\n          name: participant.name,\n          selected: false\n        };\n      });\n      this.setState({\n        name: \"\",\n        price: 0,\n        user: 0,\n        participants: resetParticipants\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      price: 0,\n      user: 0,\n      participants: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.AddExpense = this.AddExpense.bind(this); //this.resetProduct = this.resetProduct.bind(this);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value,\n          type = _e$target.type,\n          checked = _e$target.checked;\n\n    if (type === \"checkbox\") {\n      const newParticipants = this.state.participants;\n      const participantIndex = newParticipants.findIndex(participant => participant.id === Number(value));\n      newParticipants[participantIndex].selected = checked;\n      this.setState({\n        participants: newParticipants\n      });\n    } else {\n      this.setState({\n        [name]: value\n      });\n    }\n  }\n\n  AddExpense() {\n    //this.props.AddExpense(this.state);\n    this.resetProduct();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const newParticipants = nextProps.participants.map(part => {\n      return {\n        id: part.id,\n        name: part.name,\n        selected: false\n      };\n    });\n    this.setState({\n      participants: newParticipants\n    });\n  }\n\n  render() {\n    const userListForDropdown = this.props.numberOfUsers > 0 && this.props.participants.map((user, i) => {\n      return React.createElement(\"option\", {\n        key: i,\n        value: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, user.name);\n    });\n    const userListForCheckBox = this.props.numberOfUsers > 0 && this.state.participants.map((user, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: user.id,\n        onChange: this.handleChange,\n        checked: user.selected,\n        name: user.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), user.name);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"input\",\n      placeholder: \"On What?\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"Amount\",\n      name: \"price\",\n      value: this.state.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Who Paid?\", React.createElement(\"select\", {\n      id: \"user\",\n      name: \"user\",\n      value: this.state.user,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Select User\"), userListForDropdown)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), userListForCheckBox, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.AddExpense,\n      value: \"Add Expense\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AddExpense;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\PrasadData\\React\\splitit\\src\\AddExpense.js"],"names":["React","AddExpense","Component","constructor","props","resetProduct","resetParticipants","state","participants","temp","map","participant","id","uid","name","selected","setState","price","user","handleChange","bind","e","target","value","type","checked","newParticipants","participantIndex","findIndex","Number","UNSAFE_componentWillReceiveProps","nextProps","part","render","userListForDropdown","numberOfUsers","i","userListForCheckBox"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass AddExpense extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      price: 0,\r\n      user: 0,\r\n      participants: []\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.AddExpense = this.AddExpense.bind(this);\r\n    //this.resetProduct = this.resetProduct.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value, type, checked } = e.target;\r\n    if (type === \"checkbox\") {\r\n      const newParticipants = this.state.participants;\r\n      const participantIndex = newParticipants.findIndex(\r\n        participant => participant.id === Number(value)\r\n      );\r\n\r\n      newParticipants[participantIndex].selected = checked;\r\n\r\n      this.setState({\r\n        participants: newParticipants\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  }\r\n\r\n  AddExpense() {\r\n    //this.props.AddExpense(this.state);\r\n    this.resetProduct();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const newParticipants = nextProps.participants.map(part => {\r\n      return {\r\n        id: part.id,\r\n        name: part.name,\r\n        selected: false\r\n      };\r\n    });\r\n\r\n    this.setState({\r\n      participants: newParticipants\r\n    });\r\n  }\r\n\r\n  resetProduct = () => {\r\n    let resetParticipants = this.state.participants;\r\n\r\n    let temp = resetParticipants.map(participant => {\r\n      return {\r\n        id: participant.uid,\r\n        name: participant.name,\r\n        selected: false\r\n      };\r\n    });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      price: 0,\r\n      user: 0,\r\n      participants: resetParticipants\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const userListForDropdown =\r\n      this.props.numberOfUsers > 0 &&\r\n      this.props.participants.map((user, i) => {\r\n        return (\r\n          <option key={i} value={user.id}>\r\n            {user.name}\r\n          </option>\r\n        );\r\n      });\r\n\r\n    const userListForCheckBox =\r\n      this.props.numberOfUsers > 0 &&\r\n      this.state.participants.map((user, i) => {\r\n        return (\r\n          <label key={i}>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={user.id}\r\n              onChange={this.handleChange}\r\n              checked={user.selected}\r\n              name={user.name}\r\n            />\r\n            {user.name}\r\n          </label>\r\n        );\r\n      });\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"input\"\r\n          placeholder=\"On What?\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <br />\r\n\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Amount\"\r\n          name=\"price\"\r\n          value={this.state.price}\r\n          onChange={this.handleChange}\r\n        />\r\n        <br />\r\n\r\n        <label>\r\n          Who Paid?\r\n          <select\r\n            id=\"user\"\r\n            name=\"user\"\r\n            value={this.state.user}\r\n            onChange={this.handleChange}\r\n          >\r\n            <option value={0}>Select User</option>\r\n            {userListForDropdown}\r\n          </select>\r\n        </label>\r\n        <br />\r\n\r\n        {userListForCheckBox}\r\n        <br />\r\n\r\n        <input type=\"button\" onClick={this.AddExpense} value=\"Add Expense\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddExpense;\r\n"]},"metadata":{},"sourceType":"module"}