{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\PrasadData\\\\React\\\\SplitIt\\\\src\\\\AddExpense.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\n\nclass AddExpense extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.resetProduct = () => {\n      let resetParticipants = this.state.participants.map(participant => {\n        return {\n          id: participant.id,\n          name: participant.name,\n          selected: false\n        };\n      });\n      this.setState({\n        name: \"\",\n        price: 0,\n        user: 0,\n        participants: resetParticipants\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      price: 0,\n      user: 0,\n      participants: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.AddExpense = this.AddExpense.bind(this); //this.resetProduct = this.resetProduct.bind(this);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value,\n          type = _e$target.type,\n          checked = _e$target.checked;\n\n    if (type === \"checkbox\") {\n      const newParticipants = this.state.participants;\n      const participantIndex = newParticipants.findIndex(participant => participant.id === Number(value));\n      newParticipants[participantIndex].selected = checked;\n      this.setState({\n        participants: newParticipants\n      });\n    } else {\n      this.setState({\n        [name]: value\n      });\n    }\n  }\n\n  AddExpense() {\n    this.props.AddExpense(this.state);\n    this.resetProduct();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const newParticipants = nextProps.participants.map(part => {\n      return {\n        id: part.id,\n        name: part.name,\n        selected: false\n      };\n    });\n    this.setState({\n      participants: newParticipants\n    });\n  }\n\n  render() {\n    const userListForDropdown = this.props.numberOfUsers > 0 && this.props.participants.map((user, i) => {\n      return React.createElement(MenuItem, {\n        key: i,\n        value: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, user.name);\n    });\n    const userListForCheckBox = this.props.numberOfUsers > 0 && this.state.participants.map((user, i) => {\n      return React.createElement(\"label\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        type: \"checkbox\",\n        value: user.id,\n        onChange: this.handleChange,\n        checked: user.selected,\n        name: user.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), user.name);\n    });\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      alignItems: \"center\",\n      justify: \"center\",\n      style: {\n        marginTop: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      sm: 8,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      placeholder: \"On What?\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      type: \"number\",\n      placeholder: \"Amount\",\n      name: \"price\",\n      value: this.state.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Who Paid?\", React.createElement(TextField, {\n      select: true,\n      id: \"user\",\n      name: \"user\",\n      value: this.state.user,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Select User\"), userListForDropdown)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), userListForCheckBox, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.AddExpense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Add Expense\"))));\n  }\n\n}\n\nexport default AddExpense;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\PrasadData\\React\\SplitIt\\src\\AddExpense.js"],"names":["React","Card","TextField","MenuItem","Checkbox","Button","Grid","Input","AddExpense","Component","constructor","props","resetProduct","resetParticipants","state","participants","map","participant","id","name","selected","setState","price","user","handleChange","bind","e","target","value","type","checked","newParticipants","participantIndex","findIndex","Number","UNSAFE_componentWillReceiveProps","nextProps","part","render","userListForDropdown","numberOfUsers","i","userListForCheckBox","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nclass AddExpense extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      price: 0,\r\n      user: 0,\r\n      participants: []\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.AddExpense = this.AddExpense.bind(this);\r\n    //this.resetProduct = this.resetProduct.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value, type, checked } = e.target;\r\n    if (type === \"checkbox\") {\r\n      const newParticipants = this.state.participants;\r\n      const participantIndex = newParticipants.findIndex(\r\n        participant => participant.id === Number(value)\r\n      );\r\n\r\n      newParticipants[participantIndex].selected = checked;\r\n\r\n      this.setState({\r\n        participants: newParticipants\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  }\r\n\r\n  AddExpense() {\r\n    this.props.AddExpense(this.state);\r\n    this.resetProduct();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const newParticipants = nextProps.participants.map(part => {\r\n      return {\r\n        id: part.id,\r\n        name: part.name,\r\n        selected: false\r\n      };\r\n    });\r\n\r\n    this.setState({\r\n      participants: newParticipants\r\n    });\r\n  }\r\n\r\n  resetProduct = () => {\r\n    let resetParticipants = this.state.participants.map(participant => {\r\n      return {\r\n        id: participant.id,\r\n        name: participant.name,\r\n        selected: false\r\n      };\r\n    });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      price: 0,\r\n      user: 0,\r\n      participants: resetParticipants\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const userListForDropdown =\r\n      this.props.numberOfUsers > 0 &&\r\n      this.props.participants.map((user, i) => {\r\n        return (\r\n          <MenuItem key={i} value={user.id}>\r\n            {user.name}\r\n          </MenuItem>\r\n        );\r\n      });\r\n\r\n    const userListForCheckBox =\r\n      this.props.numberOfUsers > 0 &&\r\n      this.state.participants.map((user, i) => {\r\n        return (\r\n          <label key={i}>\r\n            <Checkbox\r\n              type=\"checkbox\"\r\n              value={user.id}\r\n              onChange={this.handleChange}\r\n              checked={user.selected}\r\n              name={user.name}\r\n            />\r\n            {user.name}\r\n          </label>\r\n        );\r\n      });\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={24}\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ marginTop: \"15px\" }}\r\n      >\r\n        <Grid item xs={8} sm={8} md={8}>\r\n          <Card>\r\n            <TextField\r\n              placeholder=\"On What?\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n            <br />\r\n\r\n            <TextField\r\n              type=\"number\"\r\n              placeholder=\"Amount\"\r\n              name=\"price\"\r\n              value={this.state.price}\r\n              onChange={this.handleChange}\r\n            />\r\n            <br />\r\n\r\n            <label>\r\n              Who Paid?\r\n              <TextField\r\n                select\r\n                id=\"user\"\r\n                name=\"user\"\r\n                value={this.state.user}\r\n                onChange={this.handleChange}\r\n              >\r\n                <MenuItem value={0}>Select User</MenuItem>\r\n                {userListForDropdown}\r\n              </TextField>\r\n            </label>\r\n            <br />\r\n\r\n            {userListForCheckBox}\r\n            <br />\r\n\r\n            <Button onClick={this.AddExpense}>Add Expense</Button>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddExpense;\r\n"]},"metadata":{},"sourceType":"module"}