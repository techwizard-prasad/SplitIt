{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\PrasadData\\\\React\\\\splitit\\\\src\\\\Splitter.js\";\nimport React from \"react\";\nimport AddUser from \"./AddUser.js\";\nimport UserTable from \"./UserTable.js\";\nimport AddExpense from \"./AddExpense.js\";\n\nclass Splitter extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      numberOfUsers: 0,\n      participants: [{\n        id: 0,\n        name: \"\",\n        contribution: 0,\n        amountPayable: 0\n      }],\n      products: []\n    };\n    this.saveUser = this.saveUser.bind(this); //this.handleChange = this.handleChange.bind(this);\n\n    this.AddExpense = this.AddExpense.bind(this);\n    this.resetProduct = this.resetProduct.bind(this);\n  }\n\n  saveUser(user) {\n    let tempUser = {\n      id: user.id,\n      name: user.name,\n      contribution: 0,\n      amountPayable: 0\n    };\n    let newParticipans = user.id > 1 ? this.state.participants : [];\n    newParticipans.push(tempUser);\n    this.setState(prevState => {\n      return {\n        participants: newParticipans,\n        numberOfUsers: user.id\n      };\n    });\n  } // handleChange(event) {\n  //   const { name, value, type, checked } = event.target;\n  //   if (type === \"checkbox\") {\n  //     const users =\n  //       this.state.product.participants &&\n  //       this.state.product.participants.length > 0\n  //         ? this.state.product.participants\n  //         : [];\n  //     const userIndex = users.findIndex(user => user.id === Number(value));\n  //     users[userIndex].selected = checked;\n  //     this.setState(prevState => {\n  //       return {\n  //         product: { ...prevState.product, participants: users }\n  //       };\n  //     });\n  //   } else {\n  //     this.setState(prevState => {\n  //       return {\n  //         product: { ...prevState.product, [name]: value }\n  //       };\n  //     });\n  //   }\n  // }\n\n\n  AddExpense(product) {\n    let newProducts = this.state.products;\n    newProducts.push(product);\n    this.setState({\n      products: newProducts\n    });\n  }\n\n  resetProduct() {\n    this.setState(prevState => {\n      const oldParticipants = prevState.product.participants;\n      oldParticipants.forEach(element => {\n        element.selected = false;\n      });\n      return {\n        product: {\n          name: \"\",\n          price: 0,\n          user: 0,\n          participants: oldParticipants\n        }\n      };\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(AddUser, {\n      saveUser: this.saveUser,\n      currentId: this.state.numberOfUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(UserTable, {\n      participants: this.state.participants,\n      numberOfUsers: this.state.numberOfUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(AddExpense, {\n      participants: this.state.product.participants,\n      numberOfUsers: this.state.numberOfUsers,\n      AddExpense: this.AddExpense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Splitter;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\PrasadData\\React\\splitit\\src\\Splitter.js"],"names":["React","AddUser","UserTable","AddExpense","Splitter","Component","constructor","state","numberOfUsers","participants","id","name","contribution","amountPayable","products","saveUser","bind","resetProduct","user","tempUser","newParticipans","push","setState","prevState","product","newProducts","oldParticipants","forEach","element","selected","price","render","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport AddUser from \"./AddUser.js\";\r\nimport UserTable from \"./UserTable.js\";\r\nimport AddExpense from \"./AddExpense.js\";\r\n\r\nclass Splitter extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      numberOfUsers: 0,\r\n      participants: [\r\n        {\r\n          id: 0,\r\n          name: \"\",\r\n          contribution: 0,\r\n          amountPayable: 0\r\n        }\r\n      ],\r\n\r\n      products: []\r\n    };\r\n\r\n    this.saveUser = this.saveUser.bind(this);\r\n    //this.handleChange = this.handleChange.bind(this);\r\n    this.AddExpense = this.AddExpense.bind(this);\r\n    this.resetProduct = this.resetProduct.bind(this);\r\n  }\r\n\r\n  saveUser(user) {\r\n    let tempUser = {\r\n      id: user.id,\r\n      name: user.name,\r\n      contribution: 0,\r\n      amountPayable: 0\r\n    };\r\n\r\n    let newParticipans = user.id > 1 ? this.state.participants : [];\r\n    newParticipans.push(tempUser);\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        participants: newParticipans,\r\n        numberOfUsers: user.id\r\n      };\r\n    });\r\n  }\r\n\r\n  // handleChange(event) {\r\n  //   const { name, value, type, checked } = event.target;\r\n  //   if (type === \"checkbox\") {\r\n  //     const users =\r\n  //       this.state.product.participants &&\r\n  //       this.state.product.participants.length > 0\r\n  //         ? this.state.product.participants\r\n  //         : [];\r\n  //     const userIndex = users.findIndex(user => user.id === Number(value));\r\n\r\n  //     users[userIndex].selected = checked;\r\n\r\n  //     this.setState(prevState => {\r\n  //       return {\r\n  //         product: { ...prevState.product, participants: users }\r\n  //       };\r\n  //     });\r\n  //   } else {\r\n  //     this.setState(prevState => {\r\n  //       return {\r\n  //         product: { ...prevState.product, [name]: value }\r\n  //       };\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  AddExpense(product) {\r\n    let newProducts = this.state.products;\r\n    newProducts.push(product);\r\n    this.setState({\r\n      products: newProducts\r\n    });\r\n  }\r\n\r\n  resetProduct() {\r\n    this.setState(prevState => {\r\n      const oldParticipants = prevState.product.participants;\r\n      oldParticipants.forEach(element => {\r\n        element.selected = false;\r\n      });\r\n      return {\r\n        product: { name: \"\", price: 0, user: 0, participants: oldParticipants }\r\n      };\r\n    });\r\n  }\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <div>\r\n        <AddUser\r\n          saveUser={this.saveUser}\r\n          currentId={this.state.numberOfUsers}\r\n        />\r\n        <br />\r\n\r\n        <UserTable\r\n          participants={this.state.participants}\r\n          numberOfUsers={this.state.numberOfUsers}\r\n        />\r\n        <br />\r\n\r\n        <AddExpense\r\n          participants={this.state.product.participants}\r\n          numberOfUsers={this.state.numberOfUsers}\r\n          AddExpense={this.AddExpense}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Splitter;\r\n"]},"metadata":{},"sourceType":"module"}